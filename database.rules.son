rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // views: leitura e escrita públicas (public read and write)
    match /views/{docId} {
      allow read, write: if true;
    }

    // stars: leitura e escrita públicas (public read and write)
    match /itemRatings/{docId} {
      allow read, write: if true;
    }

    // galleries: leitura pública, escrita só para autenticados (public read, authenticated write)
    match /galleries/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // content: leitura pública, escrita só para autenticados (public read, authenticated write)
    match /content/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // comments:
    // read: public
    // create: public
    // update/delete: only by the owner
    match /comments/{commentId} {
      allow read: if true;
      allow create: if true;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // images:
    // read: only by the owner (or adjust if you want public read for images)
    // create: authenticated users
    // update/delete: only by the owner
    match /images/{imageId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId; // Read only by owner
      allow create: if request.auth != null; // Any authenticated user can create
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId; // Update/Delete only by owner
    }

    // Outras coleções (genérica):
    // Coloque a regra genérica /{document=**} por último,
    // para que as regras mais específicas acima sejam avaliadas primeiro.
    match /{document=**} {
      allow read: if true; // Allows public read for anything not specified above
      allow create, update, delete: if request.auth != null; // Allows write, update, and delete only for authenticated users
    }
  }
}